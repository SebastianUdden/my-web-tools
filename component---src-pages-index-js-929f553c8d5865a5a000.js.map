{"version":3,"sources":["webpack:///./src/utils/api.js","webpack:///./src/constants/urls.js","webpack:///./src/components/chat/ResizableTextarea.js","webpack:///./src/components/chat/ChatInput.js","webpack:///./src/hooks/useKeyPress.js","webpack:///./src/components/users/Avatar.js","webpack:///./src/components/chat/ChatMessage.js","webpack:///./src/components/chat/Chat.js","webpack:///./src/components/login/LoginInput.js","webpack:///./src/components/login/LoginForm.js","webpack:///./src/components/welcome/Welcome.js","webpack:///./src/components/signup/SignupForm.js","webpack:///./src/components/users/User.js","webpack:///./src/components/users/Users.js","webpack:///./src/components/main.js","webpack:///./src/pages/index.js","webpack:///./src/constants/colors.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["get","_ref","asyncToGenerator_default","regenerator_default","a","mark","_callee","url","token","value","wrap","_context","prev","next","console","log","axios","params","then","response","data","catch","error","sent","abrupt","stop","_x","_x2","apply","this","arguments","create","_ref2","_callee2","body","_context2","post","_x3","_x4","_x5","remove","_ref3","_callee3","_context3","delete","_x6","_x7","apiUrl","process","ResizableTextarea","setValue","rows","setRows","react_default","createElement","Input","id","placeholder","onChange","event","previousRows","target","currentRows","scrollHeight","scrollTop","styled","textarea","_templateObject","colors","darkerGrey","white","scrollToBottom","setTimeout","window","scrollTo","document","ChatInput","userId","setDbUpdate","dbUpdate","currentUser","_useState","useState","_useState2","_useState3","doOnce","setDoOnce","enterPress","targetKey","keyPressed","setKeyPressed","downHandler","key","upHandler","useEffect","addEventListener","removeEventListener","useKeyPress","text","user","username","getElementById","focus","Fragment","ChatInputWrapper","ResizableTextarea_ResizableTextarea","Button","onClick","div","ChatInput_templateObject","_templateObject2","button","_templateObject3","darkGrey","Avatar","image","isVisible","size","margin","AvatarImage","src","alt","img","Avatar_templateObject","p","ChatMessage","message","isFirstMessage","users","isCurrentUser","clicked","setClicked","find","_id","ChatMessageWrapper","Avatar_Avatar","Username","Message","empty","trim","Delete","CreatedAt","createdAt","Date","toLocaleString","ChatMessage_templateObject","ChatMessage_templateObject2","darkishGrey","brightGrey","ChatMessage_templateObject3","_templateObject4","span","_templateObject5","Chat","undefined","messages","setMessages","ChatWrapper","ChatBox","Array","isArray","map","index","ChatMessage_ChatMessage","ChatInput_ChatInput","Chat_templateObject","Chat_templateObject2","LoginInput","type","LoginInput_Input","e","input","LoginInput_templateObject","LoginForm","setCurrentUser","setSignup","signUpSuccessful","showLogin","setShowLogin","setUsername","password","setPassword","_useState4","setUsers","_useState5","loginAttempt","setLoginAttempt","LoginFormWrapper","LoginInput_LoginInput","LoginButton","HandleLogin","style","color","Signup","LoginForm_templateObject","LoginForm_templateObject2","grey","LoginForm_templateObject3","localStorage","clear","setItem","Welcome","WelcomeWrapper","Welcome_templateObject","SignupForm","setSignUpSuccessful","showSignup","setShowSignup","email","setEmail","firstname","setFirstname","_useState6","lastname","setLastname","_useState7","location","setLocation","_useState8","setImage","_useState9","_useState10","signupAttempt","setSignupAttempt","SignupFormWrapper","SignupButton","HandleSignup","SignupForm_templateObject","SignupForm_templateObject2","signupData","User","UserWrapper","AvatarWrapper","User_Username","Info","User_templateObject","h2","User_templateObject2","User_templateObject3","User_templateObject4","Users","User_User","Main","tab","setTab","signup","showSite","setShowSite","getItem","MainWrapper","LoginForm_LoginForm","SignupForm_SignupForm","TabWrapper","Tab","Welcome_Welcome","Users_Users","Chat_Chat","main_templateObject","main_templateObject2","main_templateObject3","IndexPage","layout","seo","title","keywords","main_Main","__webpack_require__","d","__webpack_exports__","black","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","array","arrayOf","Header","siteTitle","background","maxWidth","padding","gatsby_browser_entry","to","reload","textDecoration","Layout","header","paddingTop","_755544856","node"],"mappings":"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","file":"component---src-pages-index-js-929f553c8d5865a5a000.js","sourcesContent":["import axios from 'axios';\n\nexport const get = async (url, token) => {\n  console.log('url: ', url);\n\n  const value = await axios\n    .get(url, {\n      params: {\n        token,\n      },\n    })\n    .then(response => {\n      console.log('GET-response: ', response);\n\n      return response && response.data;\n    })\n    .catch(error => {\n      console.log('GET-error: ', error);\n      return error;\n    });\n  return value;\n};\n\nexport const create = async (url, body, token) => {\n  const value = await axios\n    .post(url, body, {\n      params: {\n        token,\n      },\n    })\n    .then(response => {\n      console.log('POST-response: ', response);\n      return response && response.data && response.data;\n    })\n    .catch(error => {\n      console.log('POST-error: ', error);\n      return error;\n    });\n  return value;\n};\n\nexport const update = (url, token) => {\n  return `Updating ${url}, authenticating with ${token}`;\n};\n\nexport const remove = async (url, token) => {\n  const value = await axios\n    .delete(url)\n    .then(response => {\n      console.log('DELETE-response: ', response);\n      return response && response.data && response.data;\n    })\n    .catch(error => {\n      console.log('DELETE-error: ', error);\n      return error;\n    });\n  return value;\n};\n","export const apiUrl = process.env.GATSBY_API_URL;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { colors } from '../../constants/colors';\n\nexport const ResizableTextarea = ({ value, setValue, rows, setRows }) => {\n  const minRows = 1;\n  const maxRows = 25;\n\n  const handleChange = event => {\n    const textareaLineHeight = 24;\n\n    const previousRows = event.target.rows;\n    event.target.rows = minRows; // reset number of rows in textarea\n\n    const currentRows = ~~(event.target.scrollHeight / textareaLineHeight);\n\n    if (currentRows === previousRows) {\n      event.target.rows = currentRows;\n    }\n\n    if (currentRows >= maxRows) {\n      event.target.rows = maxRows;\n      event.target.scrollTop = event.target.scrollHeight;\n    }\n    setValue(event.target.value);\n    setRows(currentRows < maxRows ? currentRows : maxRows);\n  };\n\n  return (\n    <Input\n      id=\"ChatInput\"\n      placeholder=\"Message...\"\n      rows={rows}\n      value={value}\n      onChange={handleChange}\n    />\n  );\n};\n\nconst Input = styled.textarea`\n  width: 100%;\n  min-width: 50vw;\n  padding: 0.5rem;\n  background-color: ${colors.darkerGrey};\n  color: ${colors.white};\n  border: none;\n  border-bottom: 1px solid ${colors.white};\n  outline: none;\n  resize: none;\n`;\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { colors } from '../../constants/colors';\nimport { create } from '../../utils/api';\nimport { apiUrl } from '../../constants/urls';\nimport { ResizableTextarea } from './ResizableTextarea';\nimport { useKeyPress } from '../../hooks/useKeyPress';\n\nconst scrollToBottom = (setValue, setRows) => {\n  setTimeout(() => {\n    setValue('');\n    setRows(1);\n    window.scrollTo(0, document.body.scrollHeight);\n  }, 100);\n};\n\nexport const ChatInput = ({ userId, setDbUpdate, dbUpdate, currentUser }) => {\n  const [value, setValue] = useState('');\n  const [rows, setRows] = useState(1);\n  const [doOnce, setDoOnce] = useState(false);\n  const enterPress = useKeyPress('Enter');\n\n  useEffect(() => {\n    setTimeout(() => scrollToBottom(setValue, setRows), 200);\n  }, []);\n\n  if (enterPress && !doOnce && value) {\n    setDoOnce(true);\n    create(\n      `${apiUrl}/messages`,\n      {\n        text: value,\n        user: userId,\n      },\n      currentUser.username\n    ).then(response => {\n      console.log('userId: ', userId);\n      console.log('CHAT-CREATE-KEYPRESS-response: ', response);\n      setDbUpdate(!dbUpdate);\n      document.getElementById('ChatInput').focus();\n      setTimeout(() => scrollToBottom(setValue, setRows), 200);\n      setTimeout(() => setDoOnce(false), 1000);\n    });\n  }\n  return (\n    <>\n      <ChatInputWrapper>\n        <ResizableTextarea\n          id=\"ChatInput\"\n          placeholder=\"Message...\"\n          value={value}\n          setValue={setValue}\n          rows={rows}\n          setRows={setRows}\n        />\n        <Button\n          onClick={() => {\n            if (value && !doOnce) {\n              setDoOnce(true);\n              create(\n                `${apiUrl}/messages`,\n                {\n                  text: value,\n                  user: userId,\n                },\n                currentUser.username\n              ).then(response => {\n                console.log('userId: ', userId);\n                console.log('CHAT-CREATE-BUTTON-response: ', response);\n                setDbUpdate(!dbUpdate);\n                document.getElementById('ChatInput').focus();\n                setTimeout(() => scrollToBottom(setValue, setRows), 200);\n              });\n            }\n          }}\n        >\n          &#x27A3;\n        </Button>\n      </ChatInputWrapper>\n    </>\n  );\n};\n\nconst ChatInputWrapper = styled.div`\n  background-color: ${colors.darkerGrey};\n  padding: 1rem;\n  display: flex;\n  justify-content: space-evenly;\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  right: 0;\n`;\n\nconst Input = styled.textarea`\n  width: 100%;\n  min-width: 50vw;\n  padding: 0.5rem;\n  background-color: ${colors.darkerGrey};\n  color: ${colors.white};\n  border: none;\n  border-bottom: 1px solid ${colors.white};\n  outline: none;\n  border: 1px solid red;\n  height: 100%;\n`;\n\nconst Button = styled.button`\n  padding: 0.6rem 0.6rem;\n  font-size: 1.5em;\n  border: none;\n  border-radius: 10rem;\n  background-color: ${colors.white};\n  color: ${colors.darkGrey};\n`;\n","import { useState, useEffect } from 'react';\n\n// Hook\nexport function useKeyPress(targetKey) {\n  // State for keeping track of whether key is pressed\n  const [keyPressed, setKeyPressed] = useState(false);\n\n  // If pressed key is our target key then set to true\n  function downHandler({ key }) {\n    if (key === targetKey) {\n      setKeyPressed(true);\n    }\n  }\n\n  // If released key is our target key then set to false\n  const upHandler = ({ key }) => {\n    if (key === targetKey) {\n      setKeyPressed(false);\n    }\n  };\n\n  // Add event listeners\n  useEffect(() => {\n    window.addEventListener('keydown', downHandler);\n    window.addEventListener('keyup', upHandler);\n    // Remove event listeners on cleanup\n    return () => {\n      window.removeEventListener('keydown', downHandler);\n      window.removeEventListener('keyup', upHandler);\n    };\n  }, []); // Empty array ensures that effect is only run on mount and unmount\n\n  return keyPressed;\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nexport const Avatar = ({ image, isVisible, size, margin }) => {\n  return (\n    <AvatarImage\n      isVisible={image && isVisible}\n      margin={margin}\n      src={image}\n      size={size}\n      alt=\"Avatar\"\n    />\n  );\n};\n\nconst AvatarImage = styled.img`\n  width: ${p => p.size}rem;\n  height: ${p => p.size}rem;\n  border-radius: 5rem;\n  margin: ${p => p.margin};\n  visibility: ${p => (p.isVisible ? 'visible' : 'hidden')};\n`;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { colors } from '../../constants/colors';\nimport { Avatar } from '../users/Avatar';\nimport { remove } from '../../utils/api';\nimport { apiUrl } from '../../constants/urls';\n\nexport const ChatMessage = ({\n  message,\n  isFirstMessage,\n  users,\n  setDbUpdate,\n  dbUpdate,\n  isCurrentUser,\n  currentUser,\n}) => {\n  const [clicked, setClicked] = useState(false);\n  const user = users && users.find(user => user._id === message.user);\n\n  return (\n    <>\n      <ChatMessageWrapper\n        isCurrentUser={isCurrentUser}\n        isFirstMessage={isFirstMessage}\n      >\n        <Avatar\n          image={user && user.image}\n          isVisible={isFirstMessage}\n          margin={`${\n            !isCurrentUser && isFirstMessage\n              ? '1.6rem'\n              : isCurrentUser && isFirstMessage\n              ? '-0.11rem'\n              : 0\n          } 0.5rem 0 0.3rem`}\n          size={2.5}\n        />\n        <div>\n          {!isCurrentUser && isFirstMessage && (\n            <Username>{user && user.username}</Username>\n          )}\n          <Message\n            empty={!message.text || !message.text.trim()}\n            isCurrentUser={isCurrentUser}\n            onClick={() => setClicked(!clicked)}\n          >\n            {message.text}{' '}\n            {isCurrentUser && clicked && (\n              <Delete\n                onClick={() => {\n                  remove(\n                    `${apiUrl}/messages/${message._id}`,\n                    currentUser.username\n                  ).then(response => {\n                    console.log('response: ', response);\n                    setDbUpdate(!dbUpdate);\n                  });\n                }}\n              >\n                &#x2715;\n              </Delete>\n            )}\n          </Message>\n          {clicked && (\n            <CreatedAt>\n              {message.createdAt &&\n                new Date(message.createdAt).toLocaleString()}\n            </CreatedAt>\n          )}\n        </div>\n      </ChatMessageWrapper>\n    </>\n  );\n};\n\nconst ChatMessageWrapper = styled.div`\n  color: ${colors.white};\n  margin: 0;\n  padding: ${p => (p.isFirstMessage ? '1rem' : '0.3rem')} 0.5rem 0 0.5rem;\n  border-radius: 0.3rem;\n  display: flex;\n  flex-direction: ${p => (p.isCurrentUser ? 'row-reverse' : 'row')};\n  max-width: 100%;\n  /* border: ${p =>\n    p.isFirstMessage ? '1px solid red' : '1px solid green'}; */\n`;\n\nconst Message = styled.p`\n  background-color: ${p =>\n    p.isCurrentUser ? colors.darkishGrey : colors.brightGrey};\n  margin: 0 0.2rem;\n  padding: 0.5rem 0.7rem;\n  display: flex;\n  justify-content: ${p => (p.empty ? 'flex-end' : 'space-between')};\n  align-items: flex-start;\n  border-radius: 1rem;\n  word-break: break-word;\n\n  :hover {\n    background-color: ${colors.brightGrey};\n    cursor: pointer;\n  }\n`;\n\nconst CreatedAt = styled.p`\n  margin: 0 1rem;\n  padding: 0;\n  color: ${colors.brightGrey};\n`;\n\nconst Username = styled.p`\n  margin: 0.1rem 0.8rem;\n  padding: 0;\n  color: ${colors.brightGrey};\n`;\n\nconst Delete = styled.span`\n  background-color: ${colors.brightGrey};\n  color: ${colors.white};\n  border-radius: 1rem;\n  margin-left: 0.5rem;\n  padding: 0 0.3rem;\n  :hover {\n    color: ${colors.white};\n  }\n`;\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { get } from '../../utils/api';\nimport { apiUrl } from '../../constants/urls';\nimport { ChatInput } from './ChatInput';\nimport { ChatMessage } from './ChatMessage';\n\nexport const Chat = ({ users, currentUser }) => {\n  const [messages, setMessages] = useState(undefined);\n  const [dbUpdate, setDbUpdate] = useState(false);\n  // const currentUser =\n  //   users &&\n  //   users.find(user => localStorage.getItem('username') === user.username);\n  // console.log('currentUser: ', currentUser);\n\n  useEffect(() => {\n    // if (\n    //   users &&\n    //   Array.isArray(users) &&\n    //   users.length !== 0 &&\n    //   !users.find(user => localStorage.getItem('username') === user.username)\n    // ) {\n    //   setLoggedIn(false);\n    // }\n    get(`${apiUrl}/messages`, currentUser.username).then(messages => {\n      console.log('messages: ', messages);\n      setMessages(messages);\n    });\n  }, [dbUpdate]);\n\n  return (\n    <ChatWrapper>\n      <ChatBox>\n        {messages &&\n          Array.isArray(messages) &&\n          messages.map((message, index) => {\n            return (\n              <ChatMessage\n                key={message._id}\n                message={message}\n                isFirstMessage={\n                  index === 0 ? true : messages[index - 1].user !== message.user\n                }\n                users={users}\n                setDbUpdate={setDbUpdate}\n                dbUpdate={dbUpdate}\n                isCurrentUser={currentUser._id === message.user}\n                currentUser={currentUser}\n              />\n            );\n          })}\n        <ChatInput\n          userId={currentUser._id}\n          messages={messages}\n          setMessages={setMessages}\n          setDbUpdate={setDbUpdate}\n          dbUpdate={dbUpdate}\n          currentUser={currentUser}\n        />\n      </ChatBox>\n    </ChatWrapper>\n  );\n};\n\nconst ChatWrapper = styled.div`\n  margin: 0;\n  padding: 0;\n  width: 100%;\n  padding: 0.5rem 0.8rem 4rem;\n`;\nconst ChatBox = styled.div`\n  min-height: 50vh;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { colors } from '../../constants/colors';\n\nexport const LoginInput = ({ placeholder, type, value, setValue }) => {\n  return (\n    <Input\n      placeholder={placeholder}\n      type={type}\n      value={value}\n      onChange={e => setValue(e.target.value)}\n    />\n  );\n};\n\nconst Input = styled.input`\n  display: flex;\n  background-color: ${colors.darkerGrey};\n  border: none;\n  border-bottom: 1px solid ${colors.white};\n  outline: none;\n  color: ${colors.white};\n  margin: 1rem;\n  padding: 0.5rem;\n`;\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\n\nimport { get } from '../../utils/api';\nimport { LoginInput } from './LoginInput';\nimport { colors } from '../../constants/colors';\nimport { apiUrl } from '../../constants/urls';\n\nexport const LoginForm = ({ setCurrentUser, setSignup, signUpSuccessful }) => {\n  const [showLogin, setShowLogin] = useState(false);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [users, setUsers] = useState('');\n  const [loginAttempt, setLoginAttempt] = useState(0);\n\n  useEffect(() => {\n    setTimeout(() => setShowLogin(true), 200);\n  }, []);\n  useEffect(() => {\n    get(`${apiUrl}/users`).then(users => {\n      console.log('Login-users: ', users);\n      setUsers(users);\n    });\n  }, [loginAttempt]);\n\n  return (\n    <LoginFormWrapper>\n      {showLogin && (\n        <>\n          <h1>Login</h1>\n          <LoginInput\n            placeholder=\"Username\"\n            type=\"text\"\n            value={username}\n            setValue={setUsername}\n          />\n          <LoginInput\n            placeholder=\"Password\"\n            type=\"password\"\n            value={password}\n            setValue={setPassword}\n          />\n          <LoginButton\n            onClick={() => {\n              setLoginAttempt(loginAttempt + 1);\n              HandleLogin(username, password, setCurrentUser, users);\n            }}\n          >\n            Login\n          </LoginButton>\n          {loginAttempt > 0 && (\n            <p style={{ color: 'red' }}>Invalid login ({loginAttempt})</p>\n          )}\n          {!signUpSuccessful && (\n            <p>\n              Sign up <Signup onClick={() => setSignup(true)}>here</Signup>\n            </p>\n          )}\n          <br />\n          {signUpSuccessful && (\n            <p>\n              Sign up successful! You can now log in with your new username and\n              password.\n            </p>\n          )}\n        </>\n      )}\n    </LoginFormWrapper>\n  );\n};\n\nconst LoginFormWrapper = styled.div`\n  margin-top: 1rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  max-width: 20rem;\n  text-align: center;\n`;\n\nconst LoginButton = styled.button`\n  background-color: ${colors.darkerGrey};\n  color: ${colors.white};\n  padding: 0.5rem 3rem;\n  margin: 1rem;\n\n  :hover {\n    background-color: ${colors.grey};\n    cursor: pointer;\n  }\n`;\n\nconst Signup = styled.span`\n  color: orange;\n\n  :hover {\n    color: white;\n    cursor: pointer;\n  }\n`;\n\nconst HandleLogin = (username, password, setCurrentUser, users) => {\n  localStorage.clear();\n  const currentUser =\n    users &&\n    users.find(\n      user => user.username === username && user.password === password\n    );\n  if (currentUser) {\n    localStorage.setItem('username', username);\n    localStorage.setItem('password', password);\n    setCurrentUser(currentUser);\n  } else {\n    setCurrentUser(undefined);\n    console.log('Set loggedIn: false');\n  }\n};\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { Avatar } from '../users/Avatar';\n\nexport const Welcome = ({ currentUser }) => (\n  <WelcomeWrapper>\n    <Avatar\n      image={currentUser.image}\n      isVisible={true}\n      margin={'0 0.5rem 0 0'}\n      size={10}\n    />\n    <br />\n    <br />\n    <h2>Welcome {currentUser.username}</h2>\n    <p>\n      In the tabs above you can see other registered users, <br />\n      use MyChat as well as sign out.\n    </p>\n  </WelcomeWrapper>\n);\n\nconst WelcomeWrapper = styled.div`\n  padding: 5rem;\n  text-align: center;\n`;\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\n\nimport { get, create } from '../../utils/api';\nimport { LoginInput } from '../login/LoginInput';\nimport { colors } from '../../constants/colors';\nimport { apiUrl } from '../../constants/urls';\n\nexport const SignupForm = ({ setSignup, setSignUpSuccessful }) => {\n  const [showSignup, setShowSignup] = useState(false);\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [firstname, setFirstname] = useState('');\n  const [lastname, setLastname] = useState('');\n  const [location, setLocation] = useState('');\n  const [image, setImage] = useState('');\n  const [users, setUsers] = useState('');\n  const [signupAttempt, setSignupAttempt] = useState(0);\n\n  useEffect(() => {\n    setTimeout(() => setShowSignup(true), 200);\n  }, []);\n  useEffect(() => {\n    get(`${apiUrl}/users`, 'Unauthorized').then(users => {\n      console.log('Signup-users: ', users);\n      setUsers(users);\n    });\n  }, [signupAttempt]);\n\n  return (\n    <SignupFormWrapper>\n      {showSignup && (\n        <>\n          <h1>Sign Up</h1>\n          <LoginInput\n            placeholder=\"Username\"\n            type=\"text\"\n            value={username}\n            setValue={setUsername}\n          />\n          <LoginInput\n            placeholder=\"E-mail\"\n            type=\"text\"\n            value={email}\n            setValue={setEmail}\n          />\n          <LoginInput\n            placeholder=\"Password\"\n            type=\"password\"\n            value={password}\n            setValue={setPassword}\n          />\n          <LoginInput\n            placeholder=\"First name\"\n            type=\"text\"\n            value={firstname}\n            setValue={setFirstname}\n          />\n          <LoginInput\n            placeholder=\"Last name\"\n            type=\"text\"\n            value={lastname}\n            setValue={setLastname}\n          />\n          <LoginInput\n            placeholder=\"Location\"\n            type=\"text\"\n            value={location}\n            setValue={setLocation}\n          />\n          <LoginInput\n            placeholder=\"Image url\"\n            type=\"text\"\n            value={image}\n            setValue={setImage}\n          />\n          <SignupButton\n            onClick={() => {\n              setSignupAttempt(signupAttempt + 1);\n              HandleSignup(\n                {\n                  username,\n                  email,\n                  password,\n                  firstname,\n                  lastname,\n                  location,\n                  image,\n                },\n                users,\n                setSignUpSuccessful\n              );\n              localStorage.clear();\n              setSignup(false);\n            }}\n          >\n            Sign Up\n          </SignupButton>\n          {signupAttempt > 0 && (\n            <p style={{ color: 'red' }}>Invalid sign up ({signupAttempt})</p>\n          )}\n        </>\n      )}\n    </SignupFormWrapper>\n  );\n};\n\nconst SignupFormWrapper = styled.div`\n  text-align: center;\n`;\n\nconst SignupButton = styled.button`\n  background-color: ${colors.darkerGrey};\n  color: ${colors.white};\n  padding: 0.5rem 3rem;\n  margin: 1rem;\n\n  :hover {\n    background-color: ${colors.grey};\n    cursor: pointer;\n  }\n`;\n\nconst HandleSignup = (signupData, users, setSignUpSuccessful) => {\n  if (\n    users &&\n    users.find(\n      user =>\n        user.username === signupData.username || user.email === signupData.email\n    )\n  ) {\n    return undefined;\n  } else {\n    create(`${apiUrl}/users`, signupData, 'Unauthorized').then(response => {\n      console.log('USER-CREATE-response: ', response);\n    });\n    setSignUpSuccessful(true);\n  }\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { colors } from '../../constants/colors';\nimport { Avatar } from './Avatar';\n\nexport const User = ({ user, isCurrentUser }) => {\n  return (\n    <UserWrapper isCurrentUser={isCurrentUser}>\n      <AvatarWrapper>\n        <Avatar\n          image={user.image}\n          isVisible={true}\n          margin={'0 0.5rem 0 0'}\n          size={5}\n        />\n        <Username>{user.username}</Username>\n      </AvatarWrapper>\n      <Info>\n        Full name: {user.firstname} {user.lastname}\n      </Info>\n      <Info>Location: {user.location}</Info>\n      <Info>Signed up: {new Date(user.createdAt).toLocaleString()}</Info>\n      <Info>Latest log in: {new Date(user.createdAt).toLocaleString()}</Info>\n    </UserWrapper>\n  );\n};\n\nconst UserWrapper = styled.div`\n  background-color: ${colors.darkGrey};\n  border-radius: 0.5rem;\n  padding: 1rem 1rem 2.5rem;\n  margin: 1rem;\n  border: ${p => (p.isCurrentUser ? '1px solid white' : 'none')};\n`;\n\nconst Username = styled.h2`\n  margin: 0;\n`;\n\nconst Info = styled.p`\n  margin: 0.2rem 0;\n`;\n\nconst AvatarWrapper = styled.div`\n  height: 5rem;\n  margin-bottom: 1rem;\n  display: flex;\n  align-items: center;\n`;\n","import React from 'react';\nimport { User } from './User';\n\nexport const Users = ({ currentUser, users }) => (\n  <div>\n    {users &&\n      Array.isArray(users) &&\n      users.map(user => {\n        return (\n          <User\n            isCurrentUser={currentUser.username === user.username}\n            user={user}\n          />\n        );\n      })}\n  </div>\n);\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { colors } from '../constants/colors';\nimport { Chat } from './chat/Chat';\nimport { LoginForm } from './login/LoginForm';\nimport { Welcome } from './welcome/Welcome';\nimport { SignupForm } from './signup/SignupForm';\nimport { Users } from './users/Users';\nimport { get } from '../utils/api';\nimport { apiUrl } from '../constants/urls';\n\nexport const Main = () => {\n  const [tab, setTab] = useState('Welcome');\n  const [users, setUsers] = useState([]);\n  const [currentUser, setCurrentUser] = useState(undefined);\n  const [signup, setSignup] = useState(false);\n  const [showSite, setShowSite] = useState(false);\n  const [signUpSuccessful, setSignUpSuccessful] = useState(false);\n\n  useEffect(() => {\n    setShowSite(false);\n    setTimeout(() => {\n      setShowSite(true);\n    }, 400);\n    get(`${apiUrl}/users`, 'Unauthorized').then(users => {\n      setUsers(users);\n      setCurrentUser(\n        users.find(\n          user =>\n            user.username === localStorage.getItem('username') &&\n            user.password === localStorage.getItem('password')\n        )\n      );\n    });\n  }, []);\n\n  return (\n    showSite && (\n      <>\n        {!currentUser && !signup && (\n          <MainWrapper>\n            <LoginForm\n              setSignup={setSignup}\n              signUpSuccessful={signUpSuccessful}\n              setCurrentUser={setCurrentUser}\n            />\n          </MainWrapper>\n        )}\n        {!currentUser && signup && (\n          <MainWrapper>\n            <SignupForm\n              setSignUpSuccessful={setSignUpSuccessful}\n              setCurrentUser={setCurrentUser}\n              currentUser={currentUser}\n              setSignup={setSignup}\n            />\n          </MainWrapper>\n        )}\n        {currentUser && (\n          <>\n            <TabWrapper>\n              <Tab onClick={() => setTab('Users')}>Users</Tab>\n              <Tab onClick={() => setTab('Chat')}>Chat</Tab>\n              <Tab\n                onClick={() => {\n                  localStorage.clear();\n                  setCurrentUser(undefined);\n                }}\n              >\n                Sign Out\n              </Tab>\n            </TabWrapper>\n            <MainWrapper>\n              {tab === 'Welcome' && <Welcome currentUser={currentUser} />}\n              {tab === 'Users' && (\n                <Users currentUser={currentUser} users={users} />\n              )}\n              {tab === 'Chat' && (\n                <Chat users={users} currentUser={currentUser} />\n              )}\n            </MainWrapper>\n          </>\n        )}\n      </>\n    )\n  );\n};\n\nconst MainWrapper = styled.div`\n  color: ${colors.white};\n  display: flex;\n  justify-content: center;\n  margin: 0;\n  padding: 0;\n`;\n\nconst TabWrapper = styled.div`\n  display: flex;\n  justify-content: stretch;\n`;\n\nconst Tab = styled.button`\n  background-color: ${colors.darkGrey};\n  color: ${colors.white};\n  width: 100%;\n  padding: 0.8rem 0;\n  margin: 1rem 0.5rem;\n  border: none;\n\n  :hover {\n    background-color: ${colors.grey};\n    cursor: pointer;\n  }\n`;\n","import React from 'react';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport { Main } from '../components/main';\n\nconst IndexPage = () => (\n  <Layout>\n    <SEO title=\"Home\" keywords={[`gatsby`, `application`, `react`]} />\n    <Main />\n  </Layout>\n);\n\nexport default IndexPage;\n","export const colors = {\n  black: '#111',\n  white: '#fff',\n  darkerGrey: '#222',\n  darkishGrey: '#333',\n  darkGrey: '#3a3a3a',\n  grey: '#444',\n  brightGrey: '#666',\n};\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { useStaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import { Link } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { colors } from '../constants/colors';\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: colors.black,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          onClick={() => document.location.reload()}\n          style={{\n            color: colors.white,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n        {/* <span\n          style={{\n            color: colors.white,\n            textDecoration: `none`,\n          }}\n          onClick={() => {\n            localStorage.clear();\n          }}\n        >\n          Sign out\n        </span> */}\n      </h1>\n    </div>\n  </header>\n);\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n};\n\nHeader.defaultProps = {\n  siteTitle: ``,\n};\n\nexport default Header;\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { StaticQuery, graphql } from 'gatsby';\n\nimport Header from './header';\nimport './layout.css';\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: `0 auto`,\n            maxWidth: 960,\n            padding: `0 0.2rem 1.45rem`,\n            paddingTop: 0,\n          }}\n        >\n          <main>{children}</main>\n          <footer />\n        </div>\n      </>\n    )}\n  />\n);\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n"],"sourceRoot":""}